0202
Documentmenting your data

NoSQL
    graph, document, file system

records in doc oriented databases are stored as documents
    each doc contains all the data that is associated with the given record, in key value pairs (fields)
    type non specific
    documents are put into colelctions
    docs in same collection do NOT need to have same fields
    each doc has its own Primary Key, usually generated by mongo
mongo structure
    looks like a dict
mongod is a server process running somewhere and you connect to it
    you can only run 1 at a time
        mongod
  db1            db2
collection  collection
documents    documents

0203

$pip install pymongo
from pymongo import MongoClient
server = MongoClient(<IP>) #homer ip: 149.89.150.100
#if loopback: 127.0.0.1
db = server['mydb'] or db = server.mydb #both works

students = db.students #students is a collection object not a db object

!!!databases and collections are not created until a document has been added
!!!BUT you still have to declare the colls frist
students.count() #= 0

add a document:
    doc = {'name':'mlfao', 'numcats': 4, 'luckynums': [1,2,5]}
    c.insert_one( doc )

0206

peeps = col.find()
peeps is a pymongo cursor! .find() will always give you a cursor obj
for p in peeps:
    print p # all the peepz

.find_one()
    returns single document as dictionary, for interaction. NOT A CURSOR	   hmm why does it always give you the first document (peep) ?

foo.find( {'age':25} )

there is No error when you try to find something thats not there. python None object

LOGICAL OPERATIONz: '$and' '$or'and '$not'
doo.find_one( {
	        '$and' : [
		       {'name' : 'bob'},
		       {'age' : 25 }
		       ]
	     } )

INEQUALITIEz
$gt, $lt, $gte, $lte, $ne
foo.find( {'age' : {'$gte': 21}} )

foo.find_one(...)
foo['name'] ...

0208

$mongo 149.89.150.100   

>db.coll.find().pretty()

.delete_one() #return deleteresult object 
.delete_many()
.update_one( query, operation )
    '$set', '$unset', '$inc' <- youc an also increment -1!

col.update_one( {'id': 'd'}, {'$set': {'name': 'francis'}} )


0213

HTML5: modern html redesign, designed around js and standardized DOM
        includes built in support for audio and video
	includes an element that can be drawn on ~~~canvas~~~
   YOU MUST DECLARE WHAT CONTEXT YOU ARE DRAWING IN (2d, 3d, raw bitmap rendering,,)

<canvas width="600" height="300" id="slate></canvas>
var c = document.gEBI('slate');
var ctx = c.getContext('2d'); //CONTEXT
ctx.fillRect(50,75,100,200); //BLACK RECT
ctx.fillStyle = '#ff00ff' ; //...
ctx.fillRect...//NOW THE COLOR IS FF00FF!!!!

ctx.clearRect( ... ) //u can clear whole canvas!!!!!

//sadly theres no such thing as LAYERS : (
